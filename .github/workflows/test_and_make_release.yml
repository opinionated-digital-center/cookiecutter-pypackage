name: Test and make release

on:
  push:
    branches:
      - master
  pull_request:

env:
  POETRY_VIRTUALENVS_CREATE: false

jobs:
  template_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.7, 3.6]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install tools (Poetry)
        uses: Gr1N/setup-poetry@v2
      - name: Install dependencies
        run: make setup-cicd
      - name: Instantiate template
        run: make refresh
      - name: Install generated project's tests dependencies
        run: make -C build/a_generated_python_project install-test-dependencies
      - name: Run generated project's tests
        run: make -C build/a_generated_python_project test

  template_bdd:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.7, 3.6]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install tools (Poetry)
        uses: Gr1N/setup-poetry@v2
      - name: Install dependencies
        run: make setup-cicd
      - name: Instantiate template
        run: make refresh
      - name: Install generated project's bdd tests dependencies
        run: make -C build/a_generated_python_project install-bdd-dependencies
      - name: Run generated project's bdd tests
        run: make -C build/a_generated_python_project bdd

  template_format:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install tools (Poetry)
        uses: Gr1N/setup-poetry@v2
      - name: Install dependencies
        run: make setup-cicd
      - name: Instantiate template
        run: make refresh
      - name: Install generated project's format dependencies
        run: make -C build/a_generated_python_project install-format-dependencies
      - name: Run generated project's format checks
        run: make -C build/a_generated_python_project format-check

  template_lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install tools (Poetry)
        uses: Gr1N/setup-poetry@v2
      - name: Install dependencies
        run: make setup-cicd
      - name: Instantiate template
        run: make refresh
      - name: Install generated project's lint dependencies
        run: make -C build/a_generated_python_project install-lint-dependencies
      - name: Run generated project's lint checks
        run: make -C build/a_generated_python_project lint

  template_type:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.8
        uses: actions/setup-python@v1
        with:
          python-version: 3.8
      - name: Install tools (Poetry)
        uses: Gr1N/setup-poetry@v2
      - name: Install dependencies
        run: make setup-cicd
      - name: Instantiate template
        run: make refresh
      - name: Install generated project's type dependencies
        run: make -C build/a_generated_python_project install-type-dependencies
      - name: Run generated project's type checks
        run: make -C build/a_generated_python_project type

  semantic_release:
    needs:
      - template_test
      - template_bdd
      - template_format
      - template_lint
      - template_type
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/master'
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js 12.x
        uses: actions/setup-node@v1
        with:
          node-version: 12.x
      - name: Semantic Release
        uses: cycjimmy/semantic-release-action@v2
        with:
          semantic_version: 17.0.4
          extra_plugins: |
            @semantic-release/changelog@"^5.0.1"
            @semantic-release/git@"^9.0.0"
            @semantic-release/github@"^7.0.5"
        env:
          GITHUB_TOKEN: ${{ secrets.SELF_SET_GITHUB_TOKEN }}
          GIT_AUTHOR_NAME: ${{ secrets.GIT_NAME }}
          GIT_AUTHOR_EMAIL: ${{ secrets.GIT_EMAIL }}
          GIT_COMMITTER_NAME: ${{ secrets.GIT_NAME }}
          GIT_COMMITTER_EMAIL: ${{ secrets.GIT_EMAIL }}
