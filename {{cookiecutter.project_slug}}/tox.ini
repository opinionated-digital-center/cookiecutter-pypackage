[tox]
envlist = py38,
          py37,
          py36,
          bdd,
          type,
          format,
          lint,
          docs
skip_missing_interpreters = True
minversion = 3.6
isolated_build = true
skipsdist = true
ignore_basepython_conflict=true

[testenv]
whitelist_externals = poetry
basepython = python3.7
passenv = HTTP_PROXY HTTPS_PROXY NO_PROXY
commands =
    poetry install --no-dev --no-root -E test
    poetry run pytest --cov={{ cookiecutter.project_package_name }} --cov-report=html --cov-report=term {posargs:tests}

[testenv:bdd]
whitelist_externals =
    {[testenv]whitelist_externals}
    bash
passenv = {[testenv]passenv}
commands =
    poetry install --no-dev -E bdd
    poetry run behave --tags=-wip {posargs:features} --format=behave_ext.cucumber_json:PrettyCucumberJSONFormatter -o cucumber-report.json --format=pretty

[testenv:format]
description = format check
commands =
    poetry install --no-dev --no-root -E format
    poetry run isort -c -rc {posargs:{{ cookiecutter.project_package_name }} tests features}
    poetry run black --check {posargs:{{ cookiecutter.project_package_name }} tests features}

[testenv:lint]
commands =
    poetry install --no-dev --no-root -E lint
    poetry run flake8 {posargs:{{ cookiecutter.project_package_name }} tests features}

[testenv:type]
description = type check
commands =
    poetry install --no-dev --no-root -E type
    poetry run mypy {posargs:-p {{ cookiecutter.project_package_name }} -p tests}


[testenv:docs]
description = gen docs
whitelist_externals =
    {[testenv]whitelist_externals}
    make
commands =
    poetry install --no-dev --no-root -E docs
    poetry run sphinx-apidoc -o docs/ {{ cookiecutter.project_package_name }}
    make -C docs clean
    make -C docs html

[testenv:docs-pdf]
description = gen docs in pdf
whitelist_externals =
    {[testenv:docs]whitelist_externals}
commands =
    {[testenv:docs]commands}
    make -C docs latexpdf
